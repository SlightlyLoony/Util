package com.dilatush.util.dns;

/**
 * Instances of this class represent DNS messages (of any kind).  Instances are mutable and <i>not</i> threadsafe.
 *
 * @author Tom Dilatush  tom@dilatush.com
 */
public class DNSMessage {

    private int             id;                     // 16 bit integer ID supplied by application...
    private boolean         isQuery;                // true for query, false for response...
    private DNSOpCode       opCode;                 // the op code for the message (set in query, copied to response)...
    private boolean         authoritativeAnswer;    // valid in response only...
    private boolean         truncated;              // message was truncated by the transmission channel...
    private boolean         recurse;                // true if recursion is desired (set in query, copied to response)...
    private boolean         canRecurse;             // valid in response only, true if name server can recursively answer queries...
    private boolean         z;                      // reserved for future use, must be false (0) in all messages...
    private boolean         authenticated;          // valid in response only; data in answers and authorities has been authenticated...
    private boolean         checkingDisabled;       // valid in query only; true if resolver will accept non-authenticated answers and authorities...
    private DNSResponseCode responseCode;           // valid in responses only; ok or type of error...
    private int             questionCount;          // unsigned 16 bit count of questions...
    private int             answerCount;            // unsigned 16 bit count of answers...
    private int             authoritiesCount;       // unsigned 16 bit count of authorities...
    private int             additionalRecordsCount; // unsigned 16 bit count of additional records...
}
